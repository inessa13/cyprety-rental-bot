version: 2

jobs:
  tests:
    working_directory: ~/cyprety-rental-bot
    docker:
      - image: circleci/python:3.7.2
    steps:
      - checkout
      - run:
          name: Changing permissions to circleci user
          command: |
            sudo chown -R circleci:circleci /usr/local/bin
            sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: Installing dependencies
          command: |
            sudo pip install pipenv
            pipenv install --dev --deploy --ignore-pipfile
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - "/usr/local/bin"
            - "/usr/local/lib/python3.7/site-packages"
            - "~/.local/share/virtualenvs"
      - run:
          name: Linting
          command: make lint
      - run:
          name: Testing
          command: make test
      - run:
          name: Generating test results
          command: |
            pipenv run coverage xml -o test-reports/coverage.xml
            pipenv run python-codacy-coverage -r test-reports/coverage.xml
      - store_test_results:
          path: test-reports
  build:
    working_directory: ~/cyprety-rental-bot
    docker:
      - image: circleci/python:3.7.2
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker image
          command: docker build . -t fdooch/cyrentbot:"${CIRCLE_TAG}"
      - run:
          name: Push to Dockerhub
          command: |
            echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
            docker push fdooch/cyrentbot:"${CIRCLE_TAG}"
  deploy:
    working_directory: ~/cyprety-rental-bot
    docker:
      - image: circleci/python:3.7.2
    environment:
      SENTRY_RELEASE_PREFIX: cyprety-rental-bot
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "a9:da:4a:ea:d1:c4:92:5c:fb:b0:83:41:93:56:ad:b3"
      - run:
          name: Installing sentry-cli
          command: curl -sL https://sentry.io/get-cli/ | bash
      - run:
          name: Creating sentry release
          command: |
            sentry-cli releases new -p cyrentbot "${SENTRY_RELEASE_PREFIX}@${CIRCLE_TAG}"
            sentry-cli releases set-commits "${SENTRY_RELEASE_PREFIX}@${CIRCLE_TAG}" --auto
      - run:
          name: Deploy
          command: |
            echo "${SERVER_PUBLIC_KEY}" >> ~/.ssh/known_hosts
            ssh "${SERVER_USER}"@"${SERVER_HOST}" 'bash -s' < ./.circleci/deploy.sh "${TELEGRAM_BOT_TOKEN}" "${CIRCLE_TAG}" "${SENTRY_RELEASE_PREFIX}@${CIRCLE_TAG}"
      - run:
          name: Finalizing sentry release
          command: sentry-cli releases finalize "${SENTRY_RELEASE_PREFIX}@${CIRCLE_TAG}"

workflows:
  version: 2
  test-build-deploy:
    jobs:
      - tests:
          filters:
            tags:
              only: /.*/
      - build:
          requires:
            - tests
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/